name: Build and Release SearchKeyword

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (e.g. 1.0.5)'
        required: true
        default: '1.0.0'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        architecture: [x64, arm64]
        include:
          - os: ubuntu-latest
            architecture: x64
            rid: linux-x64
            ext: ''
          - os: windows-latest
            architecture: x64
            rid: win-x64
            ext: .exe
          - os: macos-latest
            architecture: x64
            rid: osx-x64
            ext: ''
          - os: ubuntu-latest
            architecture: arm64
            rid: linux-arm64
            ext: ''
          - os: windows-latest
            architecture: arm64
            rid: win-arm64
            ext: .exe
          - os: macos-latest
            architecture: arm64
            rid: osx-arm64
            ext: ''

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '10.0.x'

      - name: Set version from input
        run: echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV

      - name: Publish
        run: dotnet publish -c Release -r ${{ matrix.rid }} --self-contained true /p:Version=${{ env.VERSION }} /p:PublishSingleFile=true -o output

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ matrix.os }}-${{ matrix.architecture }}
          path: output/
          retention-days: 1

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ github.event.inputs.version }}"
          release_name: "Release v${{ github.event.inputs.version }}"
          draft: false
          prerelease: false

      - name: Upload Release Assets
        run: |
          for dir in ./artifacts/*; do
            name=$(basename "$dir")
            file="$dir/SearchKeyword"
            [ -f "$file.exe" ] && file="$file.exe"
            if [ -f "$file" ]; then
              echo "Uploading $file as $name"
              gh release upload "v${{ github.event.inputs.version }}" "$file" --repo "$GITHUB_REPOSITORY" --clobber --name "SearchKeyword-${name}"
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
